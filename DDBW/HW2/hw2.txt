Сценарий: Система мониторинга IoT-датчиков

Представьте, что вы разрабатываете бэкенд для глобальной сети датчиков мониторинга окружающей среды. Каждый датчик (сенсор) периодически отправляет данные (например, температуру, влажность, уровень CO2). Данных очень много (миллиарды записей в день), и система должна обеспечивать высокую доступность и скорость записи.

Сущности:
Датчик (Sensor): Имеет уникальный ID, геолокацию (страна, город), тип измеряемой величины (температура, влажность, CO2).
Измерение (Reading): Привязано к датчику, имеет точное время и значение измерения.

Требования к запросам:
Система должна очень быстро отвечать на следующие типы запросов:
1. Получить последние N измерений для конкретного датчика.
2. Получить все измерения для конкретного датчика за определенный период (например, за последние сутки).
3. Найти все датчики, расположенные в определенном городе.
4. Найти все датчики, которые зафиксировали критически высокий уровень CO2 за определенный день.

Задача 1. (4 балла) Спроектируйте схему данных в Cassandra

Спроектируйте таблицы в Cassandra для эффективного выполнения перечисленных выше запросов. Помните, что в Cassandra принято денормализовывать данные и создавать таблицы под конкретные запросы. JOIN'ов нет.

Форма представления результата: набор операторов CREATE TABLE на языке CQL (Cassandra Query Language) с обязательным указанием PRIMARY KEY (Partition Key и Clustering Columns). Добавьте комментарии, объясняющие, почему была выбрана именно такая структура ключа для каждой таблицы.

Задача 2. (2 балла) Напишите запросы к БД Cassandra

Напишите запросы на CQL к спроектированным в Задаче 6 таблицам для получения следующих данных:

1. Найти последние 10 измерений температуры для датчика с sensor_id = 'temp-berlin-17a'.
2. Найти все измерения уровня влажности для датчика sensor_id = 'hum-tokyo-03b' за 21 мая 2024 года.
3. Найти все типы датчиков и их ID, расположенные в городе Paris.
4. Найти все случаи фиксации критического уровня CO2 (которые были записаны в специальную таблицу) за 2024-05-21.

Задача 3. (4 балла) Напишите запросы к БД Cassandra

Для некоторых запросов может потребоваться использовать ALLOW FILTERING, в этом случае добавьте комментарий, объясняющий, почему это необходимо и каковы риски производительности.
1. Найти все измерения температуры, превышающие 35 градусов, для датчика sensor_id = 'temp-dubai-01c' за 2024-07-20.
2. Получить самый первый замер (самый старый), когда-либо сделанный датчиком sensor_id = 'hum-01a'.
3. Посчитать количество алертов по высокому уровню CO2, которые произошли в Paris за 2024-05-21.
4. Рассчитать среднюю, минимальную и максимальную температуру, зафиксированную датчиком sensor_id = 'temp-17a' за 2024-05-22.

Форма представления результата: напишите оператор CREATE TABLE, если для выполнения запроса требуется новая структура данных, а затем напишите сам запрос на CQL.
